#!/bin/bash
# Environment switching script for Supabase projects
# Usage: ./scripts/switch-env.sh [development|production]

set -e

SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
PROJECT_ROOT="$(dirname "$SCRIPT_DIR")"

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Development environment configuration
DEV_URL="https://pxwtdaqhwzweedflwora.supabase.co"
DEV_REF="pxwtdaqhwzweedflwora"
DEV_PASSWORD="dP9hFIx5hE9r7HrD"
DEV_TOKEN="sbp_5a1f7de7fceb5aa749a5f047c56ff91adb0329d4"

# Production environment configuration
PROD_URL="https://brixbdbunhwlhuwunqxw.supabase.co"
PROD_REF="brixbdbunhwlhuwunqxw"
PROD_PASSWORD="8TG8DYmSWNf88bGh"
PROD_TOKEN="sbp_5a1f7de7fceb5aa749a5f047c56ff91adb0329d4"

# Function to display usage
usage() {
    echo -e "${BLUE}Environment Switcher for Supply Chain App${NC}"
    echo ""
    echo "Usage: $0 [development|production|status]"
    echo ""
    echo "Commands:"
    echo "  development  - Switch to development environment"
    echo "  production   - Switch to production environment"
    echo "  status       - Show current environment"
    echo ""
}

# Function to update .env.local file
update_env_file() {
    local env=$1
    local url=$2
    local ref=$3
    local password=$4
    local token=$5
    
    cat > "$PROJECT_ROOT/.env.local" << EOF
# ${env} Environment Configuration
# Generated by switch-env.sh on $(date)

# =============================================================================
# ACTIVE ENVIRONMENT: ${env}
# =============================================================================
SUPABASE_URL=${url}
SUPABASE_PROJECT_REF=${ref}
SUPABASE_DB_PASSWORD=${password}
SUPABASE_ACCESS_TOKEN=${token}

# Environment identifier
ACTIVE_ENV=${env}

# =============================================================================
# ENVIRONMENT REFERENCE
# =============================================================================
DEV_SUPABASE_URL=https://pxwtdaqhwzweedflwora.supabase.co
DEV_SUPABASE_PROJECT_REF=pxwtdaqhwzweedflwora

PROD_SUPABASE_URL=https://brixbdbunhwlhuwunqxw.supabase.co
PROD_SUPABASE_PROJECT_REF=brixbdbunhwlhuwunqxw
EOF

    echo -e "${GREEN}‚úÖ Updated .env.local for ${env} environment${NC}"
}

# Function to link Supabase CLI to environment
link_supabase() {
    local env=$1
    local ref=$2
    local password=$3
    local token=$4
    
    echo -e "${YELLOW}üîó Linking Supabase CLI to ${env} environment...${NC}"
    
    cd "$PROJECT_ROOT"
    
    # Login and link
    npx supabase login --token "${token}" > /dev/null 2>&1
    
    # Link to project
    SUPABASE_DB_PASSWORD="${password}" npx supabase link --project-ref "${ref}" || {
        echo -e "${RED}‚ùå Failed to link to ${env} environment${NC}"
        return 1
    }
    
    echo -e "${GREEN}‚úÖ Supabase CLI linked to ${env} environment${NC}"
}

# Function to show current environment status
show_status() {
    if [[ -f "$PROJECT_ROOT/.env.local" ]]; then
        local current_env=$(grep "ACTIVE_ENV=" "$PROJECT_ROOT/.env.local" | cut -d'=' -f2)
        local current_url=$(grep "SUPABASE_URL=" "$PROJECT_ROOT/.env.local" | head -1 | cut -d'=' -f2)
        
        echo -e "${BLUE}Current Environment Status:${NC}"
        echo -e "Environment: ${GREEN}${current_env}${NC}"
        echo -e "Supabase URL: ${current_url}"
        echo ""
    else
        echo -e "${RED}‚ùå No environment configuration found${NC}"
        echo "Run './scripts/switch-env.sh development' or './scripts/switch-env.sh production'"
    fi
}

# Main script logic
case "${1:-}" in
    "development"|"dev")
        echo -e "${BLUE}üîÑ Switching to DEVELOPMENT environment...${NC}"
        update_env_file "development" "$DEV_URL" "$DEV_REF" "$DEV_PASSWORD" "$DEV_TOKEN"
        link_supabase "development" "$DEV_REF" "$DEV_PASSWORD" "$DEV_TOKEN"
        echo -e "${GREEN}üöÄ Successfully switched to DEVELOPMENT environment${NC}"
        echo -e "Database: ${DEV_URL}"
        ;;
    
    "production"|"prod")
        echo -e "${BLUE}üîÑ Switching to PRODUCTION environment...${NC}"
        echo -e "${RED}‚ö†Ô∏è  WARNING: You are switching to PRODUCTION!${NC}"
        read -p "Are you sure? (y/N): " -n 1 -r
        echo
        if [[ $REPLY =~ ^[Yy]$ ]]; then
            update_env_file "production" "$PROD_URL" "$PROD_REF" "$PROD_PASSWORD" "$PROD_TOKEN"
            link_supabase "production" "$PROD_REF" "$PROD_PASSWORD" "$PROD_TOKEN"
            echo -e "${GREEN}üöÄ Successfully switched to PRODUCTION environment${NC}"
            echo -e "Database: ${PROD_URL}"
        else
            echo -e "${YELLOW}‚ùå Production switch cancelled${NC}"
        fi
        ;;
    
    "status"|"")
        show_status
        ;;
    
    *)
        usage
        exit 1
        ;;
esac